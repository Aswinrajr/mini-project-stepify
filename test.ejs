<%- include("./layouts/userheader.ejs") %>


    <div class="container mt-5">

        <div class="row ">
            <div class="col-xl-3 col-lg-4 col-md-5 mt-5">
                <div class="sidebar-categories mt-5">
                    <div class="head">Browse Categories</div>
                    <ul class="main-categories">
                        <li class="main-nav-list"><a data-toggle="collapse" href="#f" aria-expanded="false"
                                aria-controls=""><span class="lnr lnr-arrow-right"></span>All Categories</a></li>
                        <% for (category of categories) { %>
                            <li class="main-nav-list"><a data-toggle="collapse"
                                    href="?page=1&category=<%= category %>&brand=<%= selectedBrand %>&sort=<%= selectedSort %>"
                                    aria-expanded="false" aria-controls=""><span class="lnr lnr-arrow-right"></span>
                                    <%= category %>
                                </a></li>
                            <% } %>
                    </ul>
                </div>
                <div class="sidebar-categories mt-5">
                    <div class="head">Popular Brands</div>
                    <ul class="main-categories">
                        <li class="main-nav-list"><a data-toggle="collapse" href="#" aria-expanded="false"
                                aria-controls=""><span class="lnr lnr-arrow-right"></span>All Brands</a></li>
                        <% for (brand of brands) { %>

                            <li class="main-nav-list"><a data-toggle="collapse"
                                    href="?page=1&category=<%= selectedCategory %>&brand=<%= brand %>&sort=<%= selectedSort %>"
                                    aria-expanded="false" aria-controls=""><span class="lnr lnr-arrow-right"></span>
                                    <%= brand %>
                                </a></li>
                            <% } %>
                    </ul>
                </div>

            </div>

            <div class="col-xl-9 col-lg-8 col-md-7 mt-5">
                <!-- Start Filter Bar -->
                <div class="filter-bar d-flex flex-wrap align-items-center mt-5">
                    <div class="sorting">
                        <select id="sortOptions">
                            <option value="default">Default</option>
                            <option value="lowToHigh">Price: Low to High</option>
                            <option value="highToLow">Price: High to Low</option>
                        </select>

                    </div>

                    <div class="pagination ml-auto" id="pagination">
                        <% for (let i=1; i <=totalPages; i++) { %>
                            <a href="?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>">
                                <%= i %>
                            </a>
                            <% } %>
                    </div>
                </div>
                <section class="lattest-product-area pb-40 category-list">
                    <div class="row">
                        <!-- single product -->
                        <% for(const product of displayedProducts) { %>
                            <div class="col-lg-4 col-md-6">
                                <div class="single-product">
                                    <img class="img-fluid" style="width: 300px;height: 300px;"
                                        src="/public/uploads/<%= product.image[0] %>" alt="">
                                    <div class="product-details">
                                        <h6>
                                            <%=product.categoryName%>
                                        </h6>
                                        <div class="price">
                                            <h6>
                                                <%=product.price%>
                                            </h6>
                                        </div>

                                        <span>
                                            <%=product.description%>
                                        </span>

                                        <div class="prd-bottom">

                                            <a href="" class="social-info">
                                                <span class="ti-bag"></span>
                                                <p class="hover-text">add to bag</p>
                                            </a>
                                            <a href="" class="social-info">
                                                <span class="lnr lnr-heart"></span>
                                                <p class="hover-text">Wishlist</p>
                                            </a>
                                            <a href="" class="social-info">
                                                <span class="lnr lnr-sync"></span>
                                                <p class="hover-text">compare</p>
                                            </a>
                                            <a href="" class="social-info">
                                                <span class="lnr lnr-move"></span>
                                                <p class="hover-text">view more</p>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <%}%>
                    </div>
                </section>
            </div>
        </div>

    </div>


    <%- include("./layouts/footer.ejs") %>



    // SHOP PRODUCT PAGE
const getShopProduct = async (req, res) => {
    try {
        const userData = await User.findOne({ email: req.session.user_id });
        if (userData) {
            const products = await product.find({ isAvailable: true });
            const categoriesData = await categoryModel.find();

            const uniqueCategories = new Set();
            const uniqueBrands = new Set();

            for (const category of categoriesData) {
                uniqueCategories.add(category.categoryName);
                uniqueBrands.add(category.brand);
            }

            const categories = Array.from(uniqueCategories);
            const brands = Array.from(uniqueBrands);

            const productsPerPage = 4;
            const currentPage = parseInt(req.query.page) || 1;
            const startIndex = (currentPage - 1) * productsPerPage;
            const endIndex = startIndex + productsPerPage;

            const displayedProducts = products.slice(startIndex, endIndex);

            console.log("Welcome to shop");
            res.render("stepifyShop", {
                totalPages: Math.ceil(products.length / productsPerPage),
                userData,
                categories,
                brands,
                products: displayedProducts,
                currentPage
            });
        } else {
            res.redirect("/");
        }
    } catch (err) {
        console.log("Error in showing the shop", err);
    }
};

// Getting data from frontend
const filterProduct = async (req, res) => {
    try {
        const userData = await User.findOne({ email: req.session.user_id });
        if (userData) {
            const { selectedCategories, selectedBrand, sortValue } = req.body;

            let query = { isAvailable: true }; // Default query

            if (selectedCategories && selectedCategories.length > 0) {
                query.categoryName = { $in: selectedCategories };
            }

            if (selectedBrand && selectedBrand.length > 0) {
                query.brand = { $in: selectedBrand };
            }

            let sortOption = {};

            if (sortValue === 1) {
                sortOption = { price: 1 }; // Low to High
            } else if (sortValue === -1) {
                sortOption = { price: -1 }; // High to Low
            }

            const itemsPerPage = 4;
            const page = parseInt(req.query.page) || 1;
            const skip = (page - 1) * itemsPerPage;

            const filteredProducts = await product
                .find(query)
                .sort(sortOption)
                .skip(skip)
                .limit(itemsPerPage);

            const totalCount = await product.countDocuments(query);
            const totalPages = Math.ceil(totalCount / itemsPerPage);

            res.status(200).json({
                success: true,
                filteredProducts,
                totalPages
            });
        } else {
            res.redirect("/");
        }
    } catch (err) {
        console.log("Error in getting data from frontend:", err);
        res.status(500).json({ success: false, error: "Internal Server Error" });
    }
};
